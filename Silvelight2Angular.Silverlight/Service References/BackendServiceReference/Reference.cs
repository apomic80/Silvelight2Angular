//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Silvelight2Angular.Silverlight.BackendServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Silvelight2Angular.Framework.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Silvelight2Angular.Silverlight.BackendServiceReference.Utente))]
    public partial class BaseEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Utente", Namespace="http://schemas.datacontract.org/2004/07/Silvelight2Angular.Framework.Data")]
    public partial class Utente : Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity {
        
        private string CAPField;
        
        private string CittaField;
        
        private string CognomeField;
        
        private string IndirizzoField;
        
        private string NomeField;
        
        private string Note1Field;
        
        private string Note2Field;
        
        private string ProvinciaField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CAP {
            get {
                return this.CAPField;
            }
            set {
                if ((object.ReferenceEquals(this.CAPField, value) != true)) {
                    this.CAPField = value;
                    this.RaisePropertyChanged("CAP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Citta {
            get {
                return this.CittaField;
            }
            set {
                if ((object.ReferenceEquals(this.CittaField, value) != true)) {
                    this.CittaField = value;
                    this.RaisePropertyChanged("Citta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cognome {
            get {
                return this.CognomeField;
            }
            set {
                if ((object.ReferenceEquals(this.CognomeField, value) != true)) {
                    this.CognomeField = value;
                    this.RaisePropertyChanged("Cognome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Indirizzo {
            get {
                return this.IndirizzoField;
            }
            set {
                if ((object.ReferenceEquals(this.IndirizzoField, value) != true)) {
                    this.IndirizzoField = value;
                    this.RaisePropertyChanged("Indirizzo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note1 {
            get {
                return this.Note1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Note1Field, value) != true)) {
                    this.Note1Field = value;
                    this.RaisePropertyChanged("Note1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note2 {
            get {
                return this.Note2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Note2Field, value) != true)) {
                    this.Note2Field = value;
                    this.RaisePropertyChanged("Note2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Provincia {
            get {
                return this.ProvinciaField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinciaField, value) != true)) {
                    this.ProvinciaField = value;
                    this.RaisePropertyChanged("Provincia");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Page", Namespace="http://schemas.datacontract.org/2004/07/Silvelight2Angular.Framework.Data")]
    public partial class Page : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IdField;
        
        private string NoteField;
        
        private string XAMLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string XAML {
            get {
                return this.XAMLField;
            }
            set {
                if ((object.ReferenceEquals(this.XAMLField, value) != true)) {
                    this.XAMLField = value;
                    this.RaisePropertyChanged("XAML");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BackendServiceReference.ICommand")]
    public interface ICommand {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICommand/GetData", ReplyAction="http://tempuri.org/ICommand/GetDataResponse")]
        System.IAsyncResult BeginGetData(int id, System.AsyncCallback callback, object asyncState);
        
        Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICommand/Save", ReplyAction="http://tempuri.org/ICommand/SaveResponse")]
        System.IAsyncResult BeginSave(Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity entity, System.AsyncCallback callback, object asyncState);
        
        void EndSave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICommand/GetPage", ReplyAction="http://tempuri.org/ICommand/GetPageResponse")]
        System.IAsyncResult BeginGetPage(int id, System.AsyncCallback callback, object asyncState);
        
        Silvelight2Angular.Silverlight.BackendServiceReference.Page EndGetPage(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommandChannel : Silvelight2Angular.Silverlight.BackendServiceReference.ICommand, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Silvelight2Angular.Silverlight.BackendServiceReference.Page Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Silvelight2Angular.Silverlight.BackendServiceReference.Page)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommandClient : System.ServiceModel.ClientBase<Silvelight2Angular.Silverlight.BackendServiceReference.ICommand>, Silvelight2Angular.Silverlight.BackendServiceReference.ICommand {
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveDelegate;
        
        private EndOperationDelegate onEndSaveDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPageDelegate;
        
        private EndOperationDelegate onEndGetPageDelegate;
        
        private System.Threading.SendOrPostCallback onGetPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CommandClient() {
        }
        
        public CommandClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommandClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveCompleted;
        
        public event System.EventHandler<GetPageCompletedEventArgs> GetPageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Silvelight2Angular.Silverlight.BackendServiceReference.ICommand.BeginGetData(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity Silvelight2Angular.Silverlight.BackendServiceReference.ICommand.EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((Silvelight2Angular.Silverlight.BackendServiceReference.ICommand)(this)).BeginGetData(id, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity retVal = ((Silvelight2Angular.Silverlight.BackendServiceReference.ICommand)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(int id) {
            this.GetDataAsync(id, null);
        }
        
        public void GetDataAsync(int id, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        id}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Silvelight2Angular.Silverlight.BackendServiceReference.ICommand.BeginSave(Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity entity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSave(entity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Silvelight2Angular.Silverlight.BackendServiceReference.ICommand.EndSave(System.IAsyncResult result) {
            base.Channel.EndSave(result);
        }
        
        private System.IAsyncResult OnBeginSave(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity entity = ((Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity)(inValues[0]));
            return ((Silvelight2Angular.Silverlight.BackendServiceReference.ICommand)(this)).BeginSave(entity, callback, asyncState);
        }
        
        private object[] OnEndSave(System.IAsyncResult result) {
            ((Silvelight2Angular.Silverlight.BackendServiceReference.ICommand)(this)).EndSave(result);
            return null;
        }
        
        private void OnSaveCompleted(object state) {
            if ((this.SaveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveAsync(Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity entity) {
            this.SaveAsync(entity, null);
        }
        
        public void SaveAsync(Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity entity, object userState) {
            if ((this.onBeginSaveDelegate == null)) {
                this.onBeginSaveDelegate = new BeginOperationDelegate(this.OnBeginSave);
            }
            if ((this.onEndSaveDelegate == null)) {
                this.onEndSaveDelegate = new EndOperationDelegate(this.OnEndSave);
            }
            if ((this.onSaveCompletedDelegate == null)) {
                this.onSaveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCompleted);
            }
            base.InvokeAsync(this.onBeginSaveDelegate, new object[] {
                        entity}, this.onEndSaveDelegate, this.onSaveCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Silvelight2Angular.Silverlight.BackendServiceReference.ICommand.BeginGetPage(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPage(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Silvelight2Angular.Silverlight.BackendServiceReference.Page Silvelight2Angular.Silverlight.BackendServiceReference.ICommand.EndGetPage(System.IAsyncResult result) {
            return base.Channel.EndGetPage(result);
        }
        
        private System.IAsyncResult OnBeginGetPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((Silvelight2Angular.Silverlight.BackendServiceReference.ICommand)(this)).BeginGetPage(id, callback, asyncState);
        }
        
        private object[] OnEndGetPage(System.IAsyncResult result) {
            Silvelight2Angular.Silverlight.BackendServiceReference.Page retVal = ((Silvelight2Angular.Silverlight.BackendServiceReference.ICommand)(this)).EndGetPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPageCompleted(object state) {
            if ((this.GetPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPageCompleted(this, new GetPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPageAsync(int id) {
            this.GetPageAsync(id, null);
        }
        
        public void GetPageAsync(int id, object userState) {
            if ((this.onBeginGetPageDelegate == null)) {
                this.onBeginGetPageDelegate = new BeginOperationDelegate(this.OnBeginGetPage);
            }
            if ((this.onEndGetPageDelegate == null)) {
                this.onEndGetPageDelegate = new EndOperationDelegate(this.OnEndGetPage);
            }
            if ((this.onGetPageCompletedDelegate == null)) {
                this.onGetPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPageCompleted);
            }
            base.InvokeAsync(this.onBeginGetPageDelegate, new object[] {
                        id}, this.onEndGetPageDelegate, this.onGetPageCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Silvelight2Angular.Silverlight.BackendServiceReference.ICommand CreateChannel() {
            return new CommandClientChannel(this);
        }
        
        private class CommandClientChannel : ChannelBase<Silvelight2Angular.Silverlight.BackendServiceReference.ICommand>, Silvelight2Angular.Silverlight.BackendServiceReference.ICommand {
            
            public CommandClientChannel(System.ServiceModel.ClientBase<Silvelight2Angular.Silverlight.BackendServiceReference.ICommand> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetData(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }
            
            public Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity EndGetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity _result = ((Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity)(base.EndInvoke("GetData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSave(Silvelight2Angular.Silverlight.BackendServiceReference.BaseEntity entity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = entity;
                System.IAsyncResult _result = base.BeginInvoke("Save", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSave(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Save", _args, result);
            }
            
            public System.IAsyncResult BeginGetPage(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("GetPage", _args, callback, asyncState);
                return _result;
            }
            
            public Silvelight2Angular.Silverlight.BackendServiceReference.Page EndGetPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Silvelight2Angular.Silverlight.BackendServiceReference.Page _result = ((Silvelight2Angular.Silverlight.BackendServiceReference.Page)(base.EndInvoke("GetPage", _args, result)));
                return _result;
            }
        }
    }
}
